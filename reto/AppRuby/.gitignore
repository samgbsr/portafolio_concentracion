# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# Temporary files generated by your text editor or operating system
# belong in git's global ignore instead:
# `$XDG_CONFIG_HOME/git/ignore` or `~/.config/git/ignore`

# Ignore bundler config (Rails specific)
/.bundle

# Ignore all environment files (except templates).
/.env*
!/.env*.erb

# Ignore all logfiles and tempfiles for both frontend and backend.
# Frontend (Rails)
/frontend/log/*
/frontend/tmp/*
!/frontend/log/.keep
!/frontend/tmp/.keep

# Backend (Python)
/backend/log/*
/backend/tmp/*
!/backend/log/.keep
!/backend/tmp/.keep

# Ignore pidfiles for Rails (if they exist)
# Rails creates process ID files for certain processes like Puma server
/frontend/tmp/pids/*
!/frontend/tmp/pids/
!/frontend/tmp/pids/.keep

# Ignore storage (uploaded files in development) for Rails.
/frontend/storage/*
!/frontend/storage/.keep

# Ignore compiled assets in the public folder for Rails
/frontend/public/assets

# Ignore Rails master key for decrypting credentials and more.
/frontend/config/master.key

# Ignore virtual environment for Python backend
/backend/venv/

# Ignore any SQLite databases (both frontend and backend if applicable)
/frontend/db/*.sqlite3
/backend/db/*.sqlite3
/frontend/db/*.sqlite3-journal
/backend/db/*.sqlite3-journal

# Ignore coverage reports (e.g., from testing)
/frontend/coverage/*
/backend/coverage/*

# Ignore node_modules if using Node.js in either frontend or backend
/frontend/node_modules/
/backend/node_modules/

# Ignore Python bytecode and cache files in backend
/backend/__pycache__/
/backend/*.py[cod]

# Ignore temporary files from text editors or OS
*.swp
*~ 
.DS_Store
